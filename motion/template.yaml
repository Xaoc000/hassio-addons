# TEMPLATE
homeassistant:
  name: Motion (%%DEVICE_NAME%%)
  latitude: %%LATITUDE%%
  longitude: %%LONGITUDE%%
  elevation: %%ELEVATION%%
  unit_system: %%UNIT_SYSTEM%%
  time_zone: %%TIME_ZONE%%
# customize: !include customize.yaml

hassio:
cloud:
frontend:
config:
updater:
history:
logbook:
map:
sun:

# conversation:
# discovery:
# tts:
#   - platform: google

group: !include groups.yaml
automation: !include automations.yaml
# script: !include scripts.yaml

## MQTT

mqtt:
  broker: '%%MQTT_BROKER%%'
  port: %%MQTT_PORT%%
  username: '%%MQTT_USERNAME%%'
  password: '%%MQTT_PASSWORD%%'

## PANELS

panel_iframe:
  motion:
    title: 'Motion AddOn'
    icon: mdi:image-plus
    url: 'http://%%DEVICE_IPADDR%%:7999'
  configurator:
    title: Configurator
    icon: mdi:wrench
    url: 'http://%%DEVICE_IPADDR%%:3218'

###
### MOTION
###

# INPUT BOOLEAN
input_boolean:
  motion_event_notify:
    name: motion_event_notify
    initial: true
    icon: mdi:switch
  motion_status_notify:
    name: motion_status_notify
    initial: true
    icon: mdi:switch

# HISTORY GRAPH
history_graph:
  motion_event_elapsed:
    name: motion_event_elapsed
    hours_to_show: 1
    refresh: 10
    entities:
      - sensor.motion_event_end_elapsed
      - sensor.motion_event_elapsed_mean
  motion_event_ago:
    name: motion_event_ago
    hours_to_show: 1
    refresh: 10
    entities:
      - sensor.motion_event_end_ago
      - sensor.motion_event_ago_mean
  motion_event_count:
    name: motion_event_count
    hours_to_show: 1
    refresh: 10
    entities:
      - sensor.motion_event_count

# CAMERA
camera motion_cameras:
  - platform: mqtt
    name: motion_last_image
    topic: '%%ORGANIZATION%%/+/+/image'
  - platform: mqtt
    name: motion_last_average
    topic: '%%ORGANIZATION%%/+/+/image-average'
  - platform: mqtt
    name: motion_last_blend
    topic: '%%ORGANIZATION%%/+/+/image-blend'
  - platform: mqtt
    name: motion_last_animated_mask
    topic: '%%ORGANIZATION%%/+/+/image-animated-mask'
  - platform: mqtt
    name: motion_last_composite
    topic: '%%ORGANIZATION%%/+/+/image-composite'
  - platform: mqtt
    name: motion_last_animated
    topic: '%%ORGANIZATION%%/+/+/image-animated'
  - platform: mqtt
    name: motion_last_annotated
    topic: '%%ORGANIZATION%%/+/+/image-annotated'
  - platform: mqtt
    name: motion_last_cropped
    topic: '%%ORGANIZATION%%/+/+/image-cropped'
  - platform: mqtt
    name: motion_localhost_image
    topic: '%%ORGANIZATION%%/%%DEVICE_NAME%%/+/image'
  - platform: mqtt
    name: motion_localhost_average
    topic: '%%ORGANIZATION%%/%%DEVICE_NAME%%/+/image-average'
  - platform: mqtt
    name: motion_localhost_blend
    topic: '%%ORGANIZATION%%/%%DEVICE_NAME%%/+/image-blend'
  - platform: mqtt
    name: motion_localhost_animated_mask
    topic: '%%ORGANIZATION%%/%%DEVICE_NAME%%/+/image-animated-mask'
  - platform: mqtt
    name: motion_localhost_composite
    topic: '%%ORGANIZATION%%/%%DEVICE_NAME%%/+/image-composite'
  - platform: mqtt
    name: motion_localhost_animated
    topic: '%%ORGANIZATION%%/%%DEVICE_NAME%%/+/image-animated'
  - platform: mqtt
    name: motion_localhost_annotated
    topic: '%%ORGANIZATION%%/%%DEVICE_NAME%%/+/image-annotated'
  - platform: mqtt
    name: motion_localhost_cropped
    topic: '%%ORGANIZATION%%/%%DEVICE_NAME%%/+/image-cropped'
  - platform: mqtt
    name: motion_localhost_image
    topic: '%%ORGANIZATION%%/%%DEVICE_NAME%%/+/image'
  - platform: mjpeg
    mjpeg_url: 'http://%%DEVICE_IPADDR%%:8090/'
    name: motion_localhost_live
    username: !secret %%ORGANIZATION%%_username
    password: !secret %%ORGANIZATION%%_password

# SENSOR
sensor motion_sensors:
  - platform: mqtt
    name: motion_configuration
    state_topic: '%%ORGANIZATION%%/%%DEVICE_NAME%%/start'
    json_attributes:
      - unit_system
      - latitude
      - longitude
      - elevation
      - interval
      - minimum_animate
      - post_pictures
      - share_dir
      - name
      - host
      - date
      - www
      - devicedb
      - timezone
      - mqtt
      - watson
      - digits
      - motion
      - cameras
    value_template: >
      {% if value_json is defined %}True{% else %}null{% endif %}
  - platform: mqtt
    name: motion_camera_found
    state_topic: '%%ORGANIZATION%%/+/+/status/found'
    expire_after: 1
    force_update: true
    json_attributes:
      - device
      - camera
      - date
      - status
    value_template: >
      {% if value_json is defined %}True{% else %}null{% endif %}
  - platform: mqtt
    name: motion_camera_lost
    state_topic: '%%ORGANIZATION%%/+/+/status/lost'
    expire_after: 1
    force_update: true
    json_attributes:
      - device
      - camera
      - date
      - status
    value_template: >
      {% if value_json is defined %}True{% else %}null{% endif %}
  - platform: mqtt
    name: motion_event_image
    state_topic: '%%ORGANIZATION%%/+/+/event/image'
    expire_after: 1
    force_update: true
    json_attributes:
      - device
      - camera
      - type
      - date
      - seqno
      - event
      - id
      - center
      - width
      - height
      - size
      - noise
    value_template: >
      {% if value_json is defined %}True{% else %}null{% endif %}
  - platform: mqtt
    name: motion_event_end
    state_topic: '%%ORGANIZATION%%/+/+/event/end'
    expire_after: 1
    force_update: true
    json_attributes:
      - device
      - camera
      - event
      - start
      - end
      - elapsed
      - date
      - images
    value_template: >
      {% if value_json is defined %}True{% else %}null{% endif %}
  - platform: template
    sensors:
      motion_camera_count:
        entity_id:
          - sensor.motion_configuration
        value_template: >-
          {% if states.sensor.motion_configuration.attributes.cameras is defined %}
            {{ states.sensor.motion_configuration.attributes.cameras | length }}
          {% else %}null{% endif %}
      motion_camera_names:
        entity_id:
          - sensor.motion_configuration
        value_template: >-
          {% if states.sensor.motion_configuration.attributes.cameras is defined %}
            {%- for camera in states.sensor.motion_configuration.attributes.cameras -%}
              {% if loop.first %}[{% else %},{% endif %}
              {{- camera.name | tojson -}}
              {%- if loop.last -%}]{%- endif -%}
            {% endfor %}
          {% else %}null{% endif %}
      motion_event_end_ago:
        entity_id:
          - sensor.motion_event_end
          - sun.sun
        unit_of_measurement: seconds
        value_template: '{{ (now().timestamp()|int) - (states.sensor.motion_event_end.attributes.date|int) }}'
        icon_template: '{% if (states.sensor.motion_event_end.attributes.date|int) > 300 %} mdi:timer-off {% else %} mdi:timer {% endif %}'
      motion_event_end_image_first:
        entity_id:
          - sensor.motion_event_end
        value_template: >-
          {% if states.sensor.motion_event_end is defined %}
            {% for image in states.sensor.motion_event_end.attributes.images %}
              {% if loop.first %} {{ image }} {% endif %}
            {% endfor %}
          {% else %} null {% endif %}
      motion_event_end_image_last:
        entity_id:
          - sensor.motion_event_end
        value_template: >-
          {% if states.sensor.motion_event_end is defined %}
            {% for image in states.sensor.motion_event_end.attributes.images %}
              {% if loop.last %} {{ image }} {% endif %}
            {% endfor %}
          {% else %} null {% endif %}
      motion_event_end_image_count:
        entity_id:
          - sensor.motion_event_end
        unit_of_measurement: 'images'
        value_template: >
          {% if states.sensor.motion_event_end is defined %}
            {{ states.sensor.motion_event_end.attributes.images | length }}
          {% else %} null {% endif %}
      motion_event_end_when:
        entity_id:
          - sensor.motion_event_end
        value_template: >
          {% if states.sensor.motion_event_end is defined %}
            {{ states.sensor.motion_event_end.attributes.date | timestamp_custom("%a %b %d ~ %I:%M %p") }}
          {% else %} null {% endif %}
      motion_event_end_device:
        entity_id:
          - sensor.motion_event_end
        value_template: >
          {% if states.sensor.motion_event_end is defined %}
            {{ states.sensor.motion_event_end.attributes.device }}
          {% else %} null {% endif %}
      motion_event_end_camera:
        entity_id:
          - sensor.motion_event_end
        value_template: >
          {% if states.sensor.motion_event_end is defined %}
            {{ states.sensor.motion_event_end.attributes.camera }}
          {% else %} null {% endif %}
      motion_event_end_event:
        entity_id:
          - sensor.motion_event_end
        value_template: >
          {% if states.sensor.motion_event_end is defined %}
            {{ states.sensor.motion_event_end.attributes.event }}
          {% else %} null {% endif %}
      motion_event_end_start:
        entity_id:
          - sensor.motion_event_end
        unit_of_measurement: seconds
        value_template: >
          {% if states.sensor.motion_event_end is defined %}
            {{ states.sensor.motion_event_end.attributes.start | int }}
          {% else %}null{% endif %}
      motion_event_end_end:
        entity_id:
          - sensor.motion_event_end
        unit_of_measurement: seconds
        value_template: >
          {% if states.sensor.motion_event_end is defined %}
            {{ states.sensor.motion_event_end.attributes.end | int }}
          {% else %}null{% endif %}
      motion_event_end_elapsed:
        entity_id:
          - sensor.motion_event_end
        unit_of_measurement: seconds
        value_template: >
          {% if states.sensor.motion_event_end is defined %}
            {{ states.sensor.motion_event_end.attributes.elapsed }}
          {% else %}null{% endif %}
      motion_event_count:
        entity_id:
          - sensor.motion_event_end_count
        unit_of_measurement: events
        value_template: >
          {% if states.sensor.motion_event_end_count is defined %}
            {{ states.sensor.motion_event_end_count.state }}
          {%- else -%}null{%- endif -%}
      motion_event_ratio:
        entity_id:
          - sensor.motion_event_end_ratio
        unit_of_measurement: '%'
        value_template: >
          {% if states.sensor.motion_event_end_ratio is defined %}
            {{ states.sensor.motion_event_end_ratio.state }}
          {%- else -%}null{%- endif -%}
      motion_event_elapsed_mean:
        entity_id:
          - sensor.motion_event_elapsed_statistics_mean
        unit_of_measurement: seconds
        value_template: >
          {% if states.sensor.motion_event_elapsed_statistics_mean is defined %}
            {{ states.sensor.motion_event_elapsed_statistics_mean.state }}
          {%- else -%}null{%- endif -%}
      motion_event_ago_mean:
        entity_id:
          - sensor.motion_event_ago_statistics_mean
        unit_of_measurement: seconds
        value_template: >
          {% if states.sensor.motion_event_ago_statistics_mean is defined %}
            {{ states.sensor.motion_event_ago_statistics_mean.state }}
          {%- else -%}null{%- endif -%}

sensor motion_statistics:
  - platform: history_stats
    name: motion_event_end_count
    entity_id: sensor.motion_event_end
    state: True
    type: count
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'
  - platform: history_stats
    icon: mdi:timer
    name: motion_event_end_time
    entity_id: sensor.motion_event_end
    state: True
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'
  - platform: history_stats
    icon: mdi:percent
    name: motion_event_ratio
    entity_id: sensor.motion_event_end
    state: True
    type: ratio
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'
  - platform: history_stats
    icon: mdi:sigma
    name: motion_event_count
    entity_id: sensor.motion_event_end
    state: True
    type: count
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'
  - platform: history_stats
    icon: mdi:timer
    name: motion_event_end_time
    entity_id: sensor.motion_event_end
    state: True
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'
  - platform: statistics
    name: motion_event_ago_statistics
    unit_of_measurement: seconds
    entity_id: sensor.motion_event_end_ago
    max_age:
      hours: 24
  - platform: statistics
    icon: mdi:clock
    name: motion_event_elapsed_statistics
    entity_id: sensor.motion_event_end_elapsed
    max_age:
      hours: 24
